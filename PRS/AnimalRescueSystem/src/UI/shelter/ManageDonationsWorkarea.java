/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.shelter;

import business.ecosystem.Business;
import business.population.FundDonation;
import business.validations.Validations;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nishi
 */
public class ManageDonationsWorkarea extends javax.swing.JPanel {

    /**
     * Creates new form ManageDonationsWorkarea
     */
    Validations validations;

    javax.swing.JSplitPane splitpane;
    Business system;
    FundDonation updateProfile;
    
    public ManageDonationsWorkarea(javax.swing.JSplitPane splitpane, Business system) {
        initComponents();
        this.splitpane = splitpane;
        this.system = system;
        this.validations = new Validations();
        this.updateProfile = null;
        lblFunds.setText(String.valueOf(this.system.getCurAmount()));
        populate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCurrentFunds = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblFunds = new javax.swing.JLabel();
        btnAccept = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtStatus = new javax.swing.JTextField();
        txtAmount = new javax.swing.JTextField();
        txtMessage = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(17, 53, 81));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Donations");
        add(jLabel1);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(17, 53, 81));
        jLabel2.setText("Current Funds:");
        add(jLabel2);

        txtCurrentFunds.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtCurrentFunds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });
        add(txtCurrentFunds);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "Amount", "Status", "Message"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1);

        lblFunds.setBackground(new java.awt.Color(17, 53, 81));
        lblFunds.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblFunds.setForeground(new java.awt.Color(255, 255, 255));
        lblFunds.setText("Back");
        add(lblFunds);

        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });
        add(btnAccept);

        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });
        add(btnReject);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/Images/charity.jpeg"))); // NOI18N
        jLabel3.setText("jLabel3");
        add(jLabel3);
        add(txtId);
        add(txtStatus);
        add(txtAmount);
        add(txtMessage);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed

        int selectRowIndex = jTable1.getSelectedRow();

        if(selectRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        FundDonation selectedProfile = (FundDonation)model.getValueAt(selectRowIndex,0  );

        txtId.setText(String.valueOf(selectedProfile.getFundDonationId()));
        txtAmount.setText(String.valueOf(selectedProfile.getAmount()));
        txtStatus.setText(String.valueOf(selectedProfile.getStatus()));
        txtMessage.setText(String.valueOf(selectedProfile.getMessage()));
        
        updateProfile = selectedProfile;
    }//GEN-LAST:event_btnSelectActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:

        if(updateProfile == null){
            JOptionPane.showMessageDialog(this, "Please select a row to be Accepted");
            return;
        }

        try{

            if(updateProfile.getStatus().equals("PENDING")){
                updateProfile.setStatus("ACCEPTED");
            
                int updateAmt = updateProfile.getAmount();
                int curAmt = system.getCurAmount();
                int newAmt = updateAmt + curAmt;
                system.setCurAmount(newAmt);
                lblFunds.setText(String.valueOf(this.system.getCurAmount()));
                populate();
            }
            else{
                JOptionPane.showMessageDialog(this, "This request has already been served");
                return;
            }
            
        }
        catch(Exception err){
            JOptionPane.showMessageDialog(this, "Issue while Accepting Amount, try again");
        }
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        if(updateProfile == null){
            JOptionPane.showMessageDialog(this, "Please select a row to be Accepted");
            return;
        }

        try{
            
            if(updateProfile.getStatus().equals("PENDING")){
                updateProfile.setStatus("REJECTED");
                populate();
            }
            else{
                JOptionPane.showMessageDialog(this, "This request has already been served");
                return;
            }
            
            
        }
        catch(Exception err){
            JOptionPane.showMessageDialog(this, "Issue while Accepting Amount, try again");
        }
        
    }//GEN-LAST:event_btnRejectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnReject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblFunds;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtCurrentFunds;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextField txtStatus;
    // End of variables declaration//GEN-END:variables

    private void populate() {
       DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        for(FundDonation pro: system.getFundDonationDirectory().getFundDonationList()){

            Object[] row = new Object[4];
            row[0] = pro;
            row[1] = pro.getAmount();
            row[2] = pro.getStatus();
            row[3] = pro.getMessage();

            model.addRow(row );

        }
    }
}
